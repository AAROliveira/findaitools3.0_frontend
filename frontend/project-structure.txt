IMPORTANTE:
Todo acesso do frontend ao WordPress/GraphQL deve ser feito via o proxy local /api/graphql.
Nunca faça fetch direto para o domínio do WordPress no código do frontend!
O proxy está implementado em src/app/api/graphql/route.ts e elimina qualquer problema de CORS.
No SSR/ISR (lado servidor), o fetchAPI monta a URL absoluta do proxy usando a variável de ambiente NEXT_PUBLIC_SITE_URL.
No client (navegador), o fetchAPI usa o caminho relativo /api/graphql.
Se mudar o domínio do frontend, lembre-se de atualizar NEXT_PUBLIC_SITE_URL no Vercel.

Estrutura do projeto (atualizada em 01/08/2025):

frontend/
├── components/
│   ├── Chatbot.tsx
│   ├── MarkdownMessage.tsx
│   ├── SearchAndFilter.tsx
│   └── ui/
│       ├── badge.tsx
│       ├── button.tsx
│       ├── card.tsx
│       └── input.tsx
├── src/
│   ├── app/
│   │   ├── globals.css
│   │   ├── layout.tsx
│   │   └── page.tsx
│   └── lib/
│       └── utils.ts
├── app/
│   ├── api/
│   │   └── chat/
│   │       └── route.ts  # Endpoint Gemini/Vertex AI com fallback e prompt guiado
│   ├── body.json
│   ├── llm_config.py
│   ├── local_search.py
│   ├── main.py
│   ├── ollama_config.py
│   ├── run_server.py
│   ├── setup_ollama.py
│   ├── start_server.py
│   ├── test_api.py
│   ├── test_backend.py
│   ├── test_chat.py
│   └── __pycache__/
├── package.json
├── tsconfig.json
├── next.config.js
├── postcss.config.js
├── tailwind.config.js
├── next-env.d.ts
└── project-structure.txt  # (este arquivo)

Principais status:
- Chatbot integrado ao Gemini/Vertex AI (Service Account, RAG findaitools.com.br)
- Prompt do Gemini orientado para conversa guiada e consulta ao RAG só após entender a necessidade
- Fallback amigável no backend para respostas vazias
- UI moderna com Markdown, contador de soluções e filtros
- Dependências antigas removidas
- Pronto para produção e deploy no Vercel

Proxy GraphQL:
- src/app/api/graphql/route.ts: repassa requisições do frontend para o endpoint real do WordPress, eliminando CORS.
- O frontend nunca acessa diretamente o domínio do WordPress, sempre via /api/graphql.

Dependências principais: Next.js, React, Tailwind CSS, Framer Motion, Lucide React.

Para rodar:
- Configure .env.local corretamente.
- Rode `npm install` e depois `npm run dev` ou `npm run build && npm start`.
