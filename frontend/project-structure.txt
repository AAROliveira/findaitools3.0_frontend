IMPORTANTE:
Todo acesso do frontend ao WordPress/GraphQL deve ser feito via o proxy local /api/graphql.
Nunca faça fetch direto para o domínio do WordPress no código do frontend!
O proxy está implementado em src/app/api/graphql/route.ts e elimina qualquer problema de CORS.
No SSR/ISR (lado servidor), o fetchAPI monta a URL absoluta do proxy usando a variável de ambiente NEXT_PUBLIC_SITE_URL.
No client (navegador), o fetchAPI usa o caminho relativo /api/graphql.
Se mudar o domínio do frontend, lembre-se de atualizar NEXT_PUBLIC_SITE_URL no Vercel.
Estrutura do projeto (frontend):

frontend/
├── .env.local
├── next.config.js
├── package.json
├── postcss.config.js
├── tailwind.config.js
├── tsconfig.json
├── src/
│   ├── app/
│   │   ├── page.tsx                # Página principal (SSR/ISR)
│   │   ├── HomeClient.tsx          # Componente client-side (UI, tabs, sidebar)
│   │   └── api/
│   │       └── graphql/            # Proxy GraphQL (route.ts)
│   ├── components/
│   │   ├── Chatbot.tsx
│   │   ├── SearchAndFilter.tsx     # Componente de busca/filtros/cards
│   │   └── ui/
│   │       ├── badge.tsx
│   │       ├── button.tsx
│   │       ├── card.tsx
│   │       └── input.tsx
│   └── lib/
│       ├── api.ts                  # Funções de fetch (usa proxy /api/graphql)
│       └── mockPosts.json          # Mock de dados (apenas para dev)

Principais fluxos:
- SSR/ISR: page.tsx busca dados do WordPress via proxy GraphQL (/api/graphql) e repassa para HomeClient.
- HomeClient: controla abas, sidebar, UI interativa.
- SearchAndFilter: recebe posts já mapeados, faz busca/filtros no client.
- .env.local: define o endpoint do GraphQL do WordPress (usado apenas pelo proxy).

Proxy GraphQL:
- src/app/api/graphql/route.ts: repassa requisições do frontend para o endpoint real do WordPress, eliminando CORS.
- O frontend nunca acessa diretamente o domínio do WordPress, sempre via /api/graphql.

Dependências principais: Next.js, React, Tailwind CSS, Framer Motion, Lucide React.

Para rodar:
- Configure .env.local corretamente.
- Rode `npm install` e depois `npm run dev` ou `npm run build && npm start`.
